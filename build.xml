<?xml version="1.0" encoding="UTF-8"?>

<!--
This file is part of SoSy-Lab Common,
a library of useful utilities:
https://github.com/sosy-lab/java-common-lib

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!-- vim: set tabstop=8 shiftwidth=4 expandtab : -->
<project name="Sosy-Lab Common Library" basedir="." default="build">
    <!-- Include a file in which all properties can be overridden.
         This file won't get checked in and can be used to change properties
         locally for one machine if necessary. -->
    <property file="build.properties"/>
    <property environment="env"/>

    <property name="ivy.configurations" value="build, runtime, test, format-source, checkstyle, spotbugs"/>
    <property name="package" value="common"/>

    <!-- Maven Central metadata -->
    <property name="ivy.pom.description" value="Library of common components for SoSy-Lab Projects"/>
    <property name="ivy.pom.url" value="https://github.com/sosy-lab/java-common-lib"/>
    <property name="ivy.pom.name" value="java-common-lib"/>
    <property name="ivy.pom.groupId" value="org.sosy-lab"/>
    <property name="ivy.pom.artifactId" value="common"/>

    <!-- We activate even the experimental error-prone checks, with a few exceptions:
        - StaticOrDefaultInterfaceMethod, AndroidJdkLibsChecker, Java7ApiChecker: only relevant for Android
        - FieldCanBeFinal: not possible for our @Option fields
        - InconsistentOverloads: backwards compatibility
        - UngroupedOverloads: not worth it
        - SuppressWarningsWithoutExplanation: TODO
        - Varifier: We do not want "var" in most places.
        - Interruption: Try again later, not well explained yet.
        - DefaultLocale: TODO: think about whether we want it
        - AddNullMarkedToPackageInfo: TODO: use JSpecify and apply nullability everywhere
    -->
    <property name="errorprone.options" value="
        -XepAllDisabledChecksAsWarnings
        -XepOpt:Nullness:Conservative=false
        -Xep:StaticOrDefaultInterfaceMethod:OFF
        -Xep:AndroidJdkLibsChecker:OFF
        -Xep:Java8ApiChecker:OFF
        -Xep:FieldCanBeFinal:OFF
        -Xep:InconsistentOverloads:OFF
        -Xep:UngroupedOverloads:OFF
        -Xep:SuppressWarningsWithoutExplanation:OFF
        -Xep:Varifier:OFF
        -Xep:Interruption:OFF
        -Xep:UnnecessaryTestMethodPrefix:OFF
        -Xep:DefaultLocale:OFF
        -Xep:AddNullMarkedToPackageInfo:OFF
        "/>

    <!-- Error Prone does not support running on Java 11 anymore. -->
    <condition property="errorprone.disable">
      <javaversion atmost="11"/>
    </condition>

    <import file="build/build-version.xml"/>
    <import file="build/build-ivy.xml"/>
    <import file="build/build-compile.xml"/>
    <import file="build/build-documentation.xml"/>
    <import file="build/build-jar.xml"/>
    <import file="build/build-junit.xml"/>
    <import file="build/build-format-source.xml"/>
    <import file="build/build-checkstyle.xml"/>
    <import file="build/build-spotbugs.xml"/>
    <import file="build/build-publish.xml"/>
    <import file="build/build-maven-publish.xml"/>

    <path id="classpath">
        <pathelement location="${class.dir}"/>
        <fileset dir="${ivy.lib.dir}" includes="runtime/*.jar test/*.jar build/auto-service-annotations.jar build/auto-value-annotations.jar"/>
    </path>

    <path id="ecj">
        <!-- Compilation fails if auto-service is not present here -->
        <fileset dir="${ivy.lib.dir}/build" includes="ecj.jar guava.jar auto-common.jar auto-service.jar auto-service-annotations.jar"/>
    </path>


    <!-- Main targets -->

    <target name="clean" description="Clean">
        <delete includeEmptyDirs="true">
            <fileset dir="." includes="${class.dir}/** ${ivy.module}-*.jar ${source.generated.dir}/**"/>
        </delete>
    </target>

    <target name="build" depends="-warn-factorypath, build-project, collect-options" description="Build"/>

    <target name="dist" depends="jar, sources, javadoc-jar" description="Make a distributable release"/>


    <target name="tests" depends="unit-tests-coverage" description="Run all tests"/>

    <target name="publish" depends="tests, dist, publish-artifacts" description="Publish current version to Ivy repository"/>

    <target name="documentation" depends="collect-options, javadoc" description="Build documentation"/>

    <target name="all-checks" description="Run all tests and checks">
        <!-- We have to use antcall here to run clean twice. -->
        <antcall target="clean"/>
        <antcall target="build-project-ecj"/>
        <antcall target="clean"/>
        <antcall target="standard-checks"/>
    </target>

    <!-- Auxiliary targets -->

    <target name="init" depends="determine-version">
        <echo message="Building ${ant.project.name} ${version}"/>
        <mkdir dir="${class.dir}"/>
        <mkdir dir="${source.generated.dir}"/>
    </target>

    <available file=".factorypath" property="factorypath.present"/>
    <target name="-warn-factorypath" unless="factorypath.present">
        <echo level="warning">If you use Eclipse, please copy .factorypath.template to .factorypath and (if necessary) adjust the path to your project directory in it.</echo>
        <echo level="warning">Otherwise you won't be able to compile the project with Eclipse.</echo>
    </target>

    <target name="build-dependencies" depends="init, resolve-dependencies"/>

    <target name="standard-checks" depends="tests, spotbugs, checkstyle, javadoc"/>
</project>
